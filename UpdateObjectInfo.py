import os
import pathlib
import re

dirname = os.path.dirname(os.path.abspath(__file__))
rootFolders = [dirname + "/rte",
           dirname + "/ThanOS"]
targetFile = dirname + "/ThanOS/src/common/ObjectInfo.java"
packages = ["java.lang",
            "rte",
            "collections",
            "devices",
            "io",
            "kernel",
            "kernel.memory",
            "kernel.scheduler",
            "shell",
            "util"]
packages = []
classes = []

print("Path: " + dirname)

def main():
    awaiting_package_name = False
    awaiting_class_name = False
    f = open(targetFile, "w")

    for r in rootFolders:
        for path, file in getFiles(r):
            if file != "Object.java":
                #f.write("\t\tif (o instanceof " + file[:-5] + ")\n")
                #f.write("\t\t\treturn \"" + file[:-5] + "\";\n")
                try:
                    counter = 0
                    openfile = open(path + '/' + file, 'r')
                    words = openfile.read()
                    words = words.replace('{', ' ')
                    words = words.replace('}', ' ')
                    words = words.replace('(', ' ')
                    words = words.replace(')', ' ')
                    words = words.replace(';', ' ')
                    words = words.replace(',', ' ')
                    words = words.replace('\n', ' ')
                    words = re.split(' ', words)
                    for word in words:
                        if word == 'class':
                            awaiting_class_name = True
                            counter += 1
                            continue
                        if word == 'package':
                            awaiting_package_name = True
                            counter += 1
                            continue
                        if awaiting_class_name:
                            if word[0].isupper() and words[counter - 2] != 'static' and words[counter - 2] != 'private' and words[counter - 2] != 'protected':
                                classes.append(word)
                                #f.write("\t\tif (o instanceof " + word + ")\n")
                                #f.write("\t\t\treturn \"" + word + "\";\n")
                                print(word + ' - ' + file)
                            awaiting_class_name = False
                        if awaiting_package_name:
                            packages.append(word)
                            awaiting_package_name = False
                        counter += 1
                except Exception as e:
                    print(e)
                    awaiting_class_name = False

    f.write("package common;\n\n")

    package_names = list(set(packages))
    for p in package_names:
        f.write("import " + p + ".*;\n")

    f.write("\n/** Generated by UpdateObjectInfo.py **/")
    f.write("\npublic class ObjectInfo\n")
    f.write("{\n")
    f.write("\tpublic static String getName(Object o)\n")
    f.write("\t{\n")
    f.write("\t\tif (o == null)\n")
    f.write("\t\t\treturn \"null\";\n")

    for c in classes:
        f.write("\t\tif (o instanceof " + c + ")\n")
        f.write("\t\t\treturn \"" + c + "\";\n")

    f.write("\t\tif (o instanceof Object)\n")
    f.write("\t\t\treturn \"Object\";\n")

    f.write("\t\treturn \"Unknown\";\n")
    f.write("\t}\n")
    f.write("}\n")
    f.close()


def getFiles(root):
    for path, dirs, files in os.walk(root):
        yield from ((path, file) for file in files if pathlib.Path(file).suffix == '.java')


main()
